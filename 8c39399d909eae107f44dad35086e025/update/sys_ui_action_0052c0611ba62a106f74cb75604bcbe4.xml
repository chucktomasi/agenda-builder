<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name/>
        <active>true</active>
        <client>false</client>
        <client_script_v2><![CDATA[function onClick(g_form) {

}]]></client_script_v2>
        <comments>Duplicate the course and all related records (including M2M). Most of the work is done by a subflow. A script include is used to replicate the M2M relationships.</comments>
        <condition/>
        <form_action>true</form_action>
        <form_button>false</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>false</form_context_menu>
        <form_link>true</form_link>
        <form_menu_button_v2>false</form_menu_button_v2>
        <form_style/>
        <format_for_configurable_workspace>false</format_for_configurable_workspace>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>Copy course</name>
        <onclick/>
        <order>100</order>
        <script><![CDATA[(function() {
	
	try {
		var inputs = {};
		inputs['course'] = current; // GlideRecord of table: x_snc_agenda_course 

		// Execute Synchronously: Run in foreground. Code snippet has access to outputs.
		var result = sn_fd.FlowAPI.getRunner()
			.subflow('x_snc_agenda.copy_course')
			.inForeground()
			.withInputs(inputs)
			.run();
		var outputs = result.getOutputs();

		// Get Outputs:
		// Note: outputs can only be retrieved when executing synchronously.
		var output = outputs['output']; // String

		var newRecs = new CopyUtil().processOutput(output);
		action.setRedirectURL('/x_snc_agenda_course_list.do');
		gs.addInfoMessage(gs.getMessage('agenda-copied', [current.getDisplayValue(), newRecs.name]));
		
	} catch (ex) {
		var message = ex.getMessage();
		gs.error(message);
	}
	
})();]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>chuck.tomasi@gmail.com</sys_created_by>
        <sys_created_on>2025-07-04 21:45:37</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>0052c0611ba62a106f74cb75604bcbe4</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Copy course</sys_name>
        <sys_overrides/>
        <sys_package display_value="Agenda Builder" source="x_snc_agenda">8c39399d909eae107f44dad35086e025</sys_package>
        <sys_policy/>
        <sys_scope display_value="Agenda Builder">8c39399d909eae107f44dad35086e025</sys_scope>
        <sys_update_name>sys_ui_action_0052c0611ba62a106f74cb75604bcbe4</sys_update_name>
        <sys_updated_by>chuck.tomasi@gmail.com</sys_updated_by>
        <sys_updated_on>2025-08-04 21:43:44</sys_updated_on>
        <table>x_snc_agenda_course</table>
        <ui11_compatible>true</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
    <sys_es_latest_script action="INSERT_OR_UPDATE">
        <id>0052c0611ba62a106f74cb75604bcbe4</id>
        <sys_created_by>chuck.tomasi@gmail.com</sys_created_by>
        <sys_created_on>2025-07-04 21:45:37</sys_created_on>
        <sys_id>2cd1e8691b2a2a106f74cb75604bcbbe</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>chuck.tomasi@gmail.com</sys_updated_by>
        <sys_updated_on>2025-07-04 21:45:37</sys_updated_on>
        <table>sys_ui_action</table>
        <use_es_latest>true</use_es_latest>
    </sys_es_latest_script>
</record_update>
